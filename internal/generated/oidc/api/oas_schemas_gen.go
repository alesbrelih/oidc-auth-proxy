// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type ErrResp struct {
	Error OptString `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrResp) GetError() OptString {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrResp) SetError(val OptString) {
	s.Error = val
}

// ErrRespStatusCode wraps ErrResp with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   ErrResp
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() ErrResp {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val ErrResp) {
	s.Response = val
}

// OidcAuthGetAccepted is response for OidcAuthGet operation.
type OidcAuthGetAccepted struct {
	XClaims OptString
}

// GetXClaims returns the value of XClaims.
func (s *OidcAuthGetAccepted) GetXClaims() OptString {
	return s.XClaims
}

// SetXClaims sets the value of XClaims.
func (s *OidcAuthGetAccepted) SetXClaims(val OptString) {
	s.XClaims = val
}

func (*OidcAuthGetAccepted) oidcAuthGetRes() {}

// OidcAuthGetUnauthorized is response for OidcAuthGet operation.
type OidcAuthGetUnauthorized struct{}

func (*OidcAuthGetUnauthorized) oidcAuthGetRes() {}

// OidcCallbackGetFound is response for OidcCallbackGet operation.
type OidcCallbackGetFound struct {
	Location  OptString
	SetCookie OptString
}

// GetLocation returns the value of Location.
func (s *OidcCallbackGetFound) GetLocation() OptString {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *OidcCallbackGetFound) GetSetCookie() OptString {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *OidcCallbackGetFound) SetLocation(val OptString) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *OidcCallbackGetFound) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// OidcSignInGetFound is response for OidcSignInGet operation.
type OidcSignInGetFound struct {
	Location  OptString
	SetCookie []string
}

// GetLocation returns the value of Location.
func (s *OidcSignInGetFound) GetLocation() OptString {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *OidcSignInGetFound) GetSetCookie() []string {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *OidcSignInGetFound) SetLocation(val OptString) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *OidcSignInGetFound) SetSetCookie(val []string) {
	s.SetCookie = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
